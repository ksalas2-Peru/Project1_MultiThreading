using System;
using System.Threading;

class DeadlockCreate
{
    static object lock1 = new object();
    static object lock2 = new object();

    static void Task1()
    {
        lock (lock1)
        {
            Console.WriteLine("Task1 acquired lock1");
            Thread.Sleep(500);
            lock (lock2)
            {
                Console.WriteLine("Task1 acquired lock2");
            }
        }
    }

    static void Task2()
    {
        lock (lock2)
        {
            Console.WriteLine("Task2 acquired lock2");
            Thread.Sleep(500);
            lock (lock1)
            {
                Console.WriteLine("Task2 acquired lock1");
            }
        }
    }

    static void Main()
    {
        Thread t1 = new Thread(Task1);
        Thread t2 = new Thread(Task2);

        t1.Start();
        t2.Start();

        t1.Join();
        t2.Join();

        static void Task2() // phase 4 starts from here
{
    lock (lock1)
    {
        Console.WriteLine("Task2 acquired lock1");
        Thread.Sleep(500);
        lock (lock2)
        {
            Console.WriteLine("Task2 acquired lock2");
        }
    }
}

    }
    
}
